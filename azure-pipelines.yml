# yamllint disable rule:line-length
---
pool:
  vmImage: 'ubuntu-20.04'

stages:
  - stage: Build
    jobs:
      - job: gcc_make
        container: akospasztor/docker-gcc-arm:8-2019-q3-linux-2.1.0
        steps:
          - script: |
              cd projects/GCC/
              make
            displayName: Build project with Make
      - job: gcc_scons
        container: akospasztor/docker-gcc-arm:8-2019-q3-linux-2.1.0
        steps:
          - script: |
              pip install -r requirements.txt
            displayName: Install python dependencies
          - script: |
              scons build --all -j8
            displayName: Build project with SCons
      - job: doxygen
        container: akospasztor/docker-gcc-arm:8-2019-q3-linux-2.1.0
        steps:
          - script: doxygen docs/Doxyfile
            displayName: Run doxygen
          - script: cp -r --parents docs/img docs/html
            displayName: Copy additional images to html folder
          - publish: $(System.DefaultWorkingDirectory)/docs/html
            artifact: doxygen-html
            displayName: Upload artifact

  - stage: Test
    jobs:
      - job: format_check
        container: akospasztor/docker-gcc-arm:8-2019-q3-linux-2.1.0
        steps:
          - script: |
              pip install -r requirements.txt
            displayName: Install python dependencies
          - script: pytest -s --executable=clang-format-11
            displayName: Run pytest
      - job: style_check
        container: akospasztor/docker-gcc-arm:8-2019-q3-linux-2.1.0
        steps:
          - script: |
              pip install -r requirements.txt
            displayName: Install python dependencies
          - script: ec
            displayName: Run editorconfig-checker
          - script: flake8
            displayName: Run flake8
          - script: yamllint .
            displayName: Run yamllint

  - stage: Deploy
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: github_pages
        steps:
          - checkout: none
          - download: current
            artifact: doxygen-html
          - script: |
              cp -r $(Pipeline.Workspace)/doxygen-html/* .
              ls -al
            displayName: Copy artifact contents
          - script: |
              git init
              git config --local user.name "Akos Pasztor"
              git config --local user.email "akospasztor@users.noreply.github.com"
            displayName: Git setup
          - script: |
              if [ -z "$(git status --porcelain)" ]
              then
                echo "Nothing to commit."
                exit 1
              fi
            displayName: Git check
          - script: |
              git add .
              git commit -m 'Deploy to GitHub Pages'
              git push --force https://akospasztor:$(gh_pat)@github.com/akospasztor/stm32-rtc-scheduler.git master:gh-pages
            displayName: Git push
